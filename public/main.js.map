{"version":3,"sources":["./src/app/main-report/main-report.component.ts","./src/app/main-report/main-report.component.html","./src/environments/environment.ts","./src/services/bank.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/transaction/transaction.component.ts","./src/app/transaction/transaction.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BankService } from '../../services/bank.service';\n\n@Component({\n  selector: 'app-main-report',\n  templateUrl: './main-report.component.html',\n  styleUrls: ['./main-report.component.css']\n})\nexport class MainReportComponent implements OnInit {\n\n  public account = '';\n  public transactions = [];\n\n  constructor(private bankService: BankService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  onSubmit() {\n    this.bankService.getAccount(this.account).subscribe(data => {\n      this.transactions = data;\n    });\n  }\n}\n","<mat-form-field class=\"example-full-width\">\n    <mat-label>Account</mat-label>\n    <input matInput placeholder=\"Account\" [(ngModel)]=\"account\">\n</mat-form-field>\n\n<button (click)=\"onSubmit()\" mat-button color=\"primary\">Get Transactions</button>\n\n<mat-list role=\"list\">\n    <mat-list-item *ngFor=\"let transaction of transactions\" role=\"listitem\">\n        <span [ngClass]=\"'report-field'\">Type: {{transaction.type}}</span> |&nbsp;\n        <span [ngClass]=\"'report-field'\">Amount: <span [ngClass]=\"transaction.type === 'deposit' ? 'type-green' : 'type-red'\">{{transaction.amount}}</span></span> |&nbsp;\n        <span *ngIf=\"transaction.type === 'loan'\">\n            <span [ngClass]=\"'report-field'\">Interest: {{transaction.interest}}</span> |&nbsp;\n            <span [ngClass]=\"'report-field'\">Payments: {{transaction.payments}}</span> |&nbsp;\n        </span>\n        <span [ngClass]=\"'report-field'\">Date: {{transaction.created_at | date:\"MM/dd/yy\"}}</span> |&nbsp;\n    </mat-list-item>\n</mat-list>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BankService {\n\n    constructor(private http: HttpClient) { }\n\n    getAccount(id): Observable<any> {\n        return this.http.get(`/api/account/${id}`);\n    }\n\n    postTransaction(data): Observable<any> {\n        return this.http.post(`/api/transaction`, data);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<div [ngClass]=\"'container'\">\n    <div [ngClass]=\"'nav'\">\n        <a [routerLink]=\"['/account']\">Account</a>\n        <a [routerLink]=\"['/transaction']\">Transaction</a>\n    </div>\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatListModule } from '@angular/material/list';\n\nimport { MainReportComponent } from './main-report/main-report.component';\nimport { TransactionComponent } from './transaction/transaction.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainReportComponent,\n    TransactionComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BankService } from '../../services/bank.service';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit {\n\n  public account = '';\n  public amount = '';\n  public selected = '';\n  public interest = '';\n  public payments = '';\n\n  constructor(private bankService: BankService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  onSubmit() {\n    const data = {\n      accountNumber: this.account,\n      type: this.selected,\n      amount: this.amount,\n      interest: this.interest,\n      payments: this.payments,\n    };\n    this.bankService.postTransaction(data).subscribe(() => {\n      this.account = '';\n      this.amount = '';\n      this.selected = '';\n      this.interest = '';\n      this.payments = '';\n    });\n  }\n\n}\n","<mat-card>\n    <div class=\"example-container\">\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Bank Account</mat-label>\n            <input matInput placeholder=\"Account\" [(ngModel)]=\"account\">\n        </mat-form-field>\n\n        <br>\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Select an option</mat-label>\n            <mat-select [(value)]=\"selected\">\n                <mat-option disabled>None</mat-option>\n                <mat-option value=\"withdrawn\">Withdrawn</mat-option>\n                <mat-option value=\"deposit\">Deposit</mat-option>\n                <mat-option value=\"loan\">Loan</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <br>\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Amount</mat-label>\n            <input matInput placeholder=\"Amount\" [(ngModel)]=\"amount\">\n        </mat-form-field>\n\n        <br>\n\n        <div *ngIf=\"selected === 'loan'; then thenBlock\"></div>\n\n        <ng-template #thenBlock>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>Interest</mat-label>\n                <input matInput placeholder=\"Interest\" [(ngModel)]=\"interest\">\n            </mat-form-field>\n\n            <br>\n\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>Payments</mat-label>\n                <input matInput placeholder=\"Payments\" [(ngModel)]=\"payments\">\n            </mat-form-field>\n\n        </ng-template>\n\n        <br>\n\n        <button (click)=\"onSubmit()\" mat-button color=\"primary\">Submit</button>\n\n        <br>\n    </div>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MainReportComponent } from './main-report/main-report.component';\nimport { TransactionComponent } from './transaction/transaction.component';\n\nconst routes: Routes = [\n  { path: 'account', component: MainReportComponent },\n  { path: 'transaction', component: TransactionComponent },\n  { path: '**', component: MainReportComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}